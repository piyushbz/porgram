/*
Sum Root to Leaf Numbers
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number. An example is the
root-to-leaf path 1->2->3 which represents the number 123. Find the total sum of all root-to-leaf numbers % 1003. Example :
    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12. The root-to-leaf path 1->3 represents the number 13. Return the 
sum = (12 + 13) % 1003 = 25 % 1003 = 25.

*/
/*                PROGRAM                        */

int mod(string num, int a) 
{
    int res = 0; 
    for (int i = 0; i < num.length(); i++) 
         res = (res*10 + (int)num[i] - '0') %a; 
  
    return res; 
} 
int sum(TreeNode *A, string val){
    if (A==NULL) return 0;
    if (A->left==NULL && A->right==NULL) 
    {val = val+to_string(A->val);
    int x=mod(val,1003);
    return x;    
    }
    val = val+to_string(A->val);
    return ((sum(A->left, val))%1003+(sum(A->right, val)%1003))%1003;  
     }
int Solution::sumNumbers(TreeNode* A) {
    int X=sum(A, "");
    return X;
}
